/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package banco.views;

import banco.Cliente;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import javax.swing.JOptionPane;
import banco.transacciones;
import banco.Empleado;

/**
 *
 * @author bcortez
 */
public class index extends javax.swing.JFrame {

    ArrayList<Cliente> listaCliente = new ArrayList<Cliente>();
    ArrayList<Empleado> listaEmpleado = new ArrayList<Empleado>();
    ArrayList<transacciones> listaRegistro = new ArrayList<transacciones>();
    int valorprev;

    /**
     * Creates new form index
     */
    public index() {
        initComponents();
        this.setLocationRelativeTo(null);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        nombre = new javax.swing.JTextField();
        apellido = new javax.swing.JTextField();
        fecha = new com.toedter.calendar.JDateChooser();
        guardar = new javax.swing.JButton();
        cancelar = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        tipoCuenta = new javax.swing.JComboBox<>();
        jPanel3 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jPanel4 = new javax.swing.JPanel();
        jPanel5 = new javax.swing.JPanel();
        jLabel6 = new javax.swing.JLabel();
        jPanel6 = new javax.swing.JPanel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        numeroCuenta = new javax.swing.JTextField();
        depositante = new javax.swing.JTextField();
        saldo = new javax.swing.JSpinner();
        tipoTransaccion = new javax.swing.JComboBox<>();
        transaccion = new javax.swing.JButton();
        jLabel19 = new javax.swing.JLabel();
        empleadoSeleccion = new javax.swing.JComboBox<>();
        jPanel7 = new javax.swing.JPanel();
        jPanel8 = new javax.swing.JPanel();
        jLabel11 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        Tabla = new javax.swing.JTable();
        jButton1 = new javax.swing.JButton();
        tipoTransaccionB = new javax.swing.JComboBox<>();
        jLabel12 = new javax.swing.JLabel();
        jButton2 = new javax.swing.JButton();
        numeroCuentaB = new javax.swing.JTextField();
        jLabel13 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        tipoCuentaB = new javax.swing.JComboBox<>();
        empleadoSeleccion1 = new javax.swing.JComboBox<>();
        jLabel20 = new javax.swing.JLabel();
        jLabel21 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        valorTotal = new javax.swing.JTextPane();
        limpiarFiltros = new javax.swing.JButton();
        jLabel22 = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        totalRetiro = new javax.swing.JTextPane();
        jScrollPane4 = new javax.swing.JScrollPane();
        totalDeposito = new javax.swing.JTextPane();
        jLabel23 = new javax.swing.JLabel();
        jPanel9 = new javax.swing.JPanel();
        jPanel10 = new javax.swing.JPanel();
        jLabel15 = new javax.swing.JLabel();
        jPanel11 = new javax.swing.JPanel();
        jLabel16 = new javax.swing.JLabel();
        jLabel17 = new javax.swing.JLabel();
        jLabel18 = new javax.swing.JLabel();
        eNombre = new javax.swing.JTextField();
        eApellido = new javax.swing.JTextField();
        eFecha = new com.toedter.calendar.JDateChooser();
        Regsitrar_Empleado = new javax.swing.JButton();
        cancelarEmpleado = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jTabbedPane1.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Registro", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Dialog", 0, 24), new java.awt.Color(0, 80, 136))); // NOI18N

        jLabel2.setText("Nombre");

        jLabel3.setText("Apellido");

        jLabel4.setText("Fecha Nacimiento");

        fecha.setDateFormatString("dd/MM/yyyy");

        guardar.setBackground(new java.awt.Color(33, 123, 74));
        guardar.setForeground(new java.awt.Color(255, 255, 255));
        guardar.setText("Registrar");
        guardar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                guardarActionPerformed(evt);
            }
        });

        cancelar.setBackground(new java.awt.Color(187, 26, 41));
        cancelar.setForeground(new java.awt.Color(255, 255, 255));
        cancelar.setText("Cancelar");
        cancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelarActionPerformed(evt);
            }
        });

        jLabel5.setText("Tipo de Cuenta");

        tipoCuenta.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Seleccionar", "Cta.Ahorros", "Cta.Corriente" }));

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel4)
                    .addComponent(jLabel3)
                    .addComponent(jLabel2)
                    .addComponent(jLabel5))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(guardar, javax.swing.GroupLayout.PREFERRED_SIZE, 151, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(cancelar, javax.swing.GroupLayout.PREFERRED_SIZE, 166, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addComponent(tipoCuenta, 0, 215, Short.MAX_VALUE)
                        .addComponent(fecha, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(nombre, javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(apellido, javax.swing.GroupLayout.Alignment.LEADING)))
                .addContainerGap(477, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(nombre, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2))
                .addGap(8, 8, 8)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(apellido, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3))
                .addGap(9, 9, 9)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(fecha, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(tipoCuenta, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(guardar)
                    .addComponent(cancelar))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel3.setBackground(new java.awt.Color(30, 80, 109));

        jLabel1.setFont(new java.awt.Font("Ubuntu", 0, 36)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("Registro de Clientes");

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addContainerGap(619, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Registro de Clientes", jPanel1);

        jPanel5.setBackground(new java.awt.Color(30, 80, 109));

        jLabel6.setFont(new java.awt.Font("Ubuntu", 0, 36)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(255, 255, 255));
        jLabel6.setText("Transacciones");

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel6)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel6)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel6.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Ingrese los datos", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Dialog", 0, 24), new java.awt.Color(0, 80, 136))); // NOI18N

        jLabel7.setText("Número de Cuenta");

        jLabel8.setText("Tipo de Transaccion");

        jLabel9.setText("Nombre del Depositante");

        jLabel10.setText("Valor de la Transacción");

        tipoTransaccion.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Seleccionar", "Depósito", "Retiro" }));

        transaccion.setText("Realizar Transacción");
        transaccion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                transaccionActionPerformed(evt);
            }
        });

        jLabel19.setText("Empleado Responsable");

        empleadoSeleccion.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Seleccionar" }));

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(transaccion, javax.swing.GroupLayout.PREFERRED_SIZE, 214, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addGroup(jPanel6Layout.createSequentialGroup()
                            .addGap(45, 45, 45)
                            .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jLabel8, javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(jLabel7, javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(jLabel19, javax.swing.GroupLayout.Alignment.TRAILING))
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(tipoTransaccion, 0, 190, Short.MAX_VALUE)
                                .addComponent(empleadoSeleccion, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(numeroCuenta)))
                        .addGroup(jPanel6Layout.createSequentialGroup()
                            .addGap(36, 36, 36)
                            .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(jLabel9)
                                .addComponent(jLabel10))
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(saldo, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(depositante)))))
                .addContainerGap(540, Short.MAX_VALUE))
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(empleadoSeleccion, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel19))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 9, Short.MAX_VALUE)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8)
                    .addComponent(tipoTransaccion, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(numeroCuenta, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel9)
                    .addComponent(depositante, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel10)
                    .addComponent(saldo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(transaccion)
                .addContainerGap())
        );

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jPanel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(152, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Transacciones", jPanel4);

        jPanel8.setBackground(new java.awt.Color(30, 80, 109));

        jLabel11.setFont(new java.awt.Font("Ubuntu", 0, 36)); // NOI18N
        jLabel11.setForeground(new java.awt.Color(255, 255, 255));
        jLabel11.setText("Reportes");

        javax.swing.GroupLayout jPanel8Layout = new javax.swing.GroupLayout(jPanel8);
        jPanel8.setLayout(jPanel8Layout);
        jPanel8Layout.setHorizontalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel11)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel8Layout.setVerticalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel11)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        Tabla.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null}
            },
            new String [] {
                "Tipo Transaccion", "Tipo Cuenta", "N° Cuenta", "Titular", "Monto", "Depositante", "Empleado"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Object.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(Tabla);

        jButton1.setText("Ver Todas las Transacciones");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        tipoTransaccionB.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Seleccionar", "Ver Depositos", "Ver Retiros" }));

        jLabel12.setText("Tipo de Transacción");

        jButton2.setText("Buscar");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jLabel13.setText("Número de Cuenta");

        jLabel14.setText("Tipo de Cuenta");

        tipoCuentaB.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Seleccionar", "Cta.Corriente", "Cta.Ahorros" }));

        empleadoSeleccion1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Seleccionar" }));

        jLabel20.setText("Empleado");

        jLabel21.setText("Total de las transacciones :");

        jScrollPane2.setViewportView(valorTotal);

        limpiarFiltros.setText("Limpiar Filtros");
        limpiarFiltros.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                limpiarFiltrosActionPerformed(evt);
            }
        });

        jLabel22.setText("Total de Depósitos:");

        jScrollPane3.setViewportView(totalRetiro);

        jScrollPane4.setViewportView(totalDeposito);

        jLabel23.setText("Total de Retiros:");

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel20)
                    .addComponent(jLabel13))
                .addGap(18, 18, 18)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(numeroCuentaB, javax.swing.GroupLayout.PREFERRED_SIZE, 175, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(empleadoSeleccion1, javax.swing.GroupLayout.PREFERRED_SIZE, 176, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(17, 17, 17)
                .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(limpiarFiltros)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel7Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel7Layout.createSequentialGroup()
                        .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel7Layout.createSequentialGroup()
                                .addComponent(jLabel12)
                                .addGap(21, 21, 21))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel7Layout.createSequentialGroup()
                                .addComponent(jLabel14)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)))
                        .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(tipoTransaccionB, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(tipoCuentaB, javax.swing.GroupLayout.PREFERRED_SIZE, 177, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 237, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(15, 15, 15))
                    .addGroup(jPanel7Layout.createSequentialGroup()
                        .addComponent(jLabel21)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 111, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel22)
                        .addGap(4, 4, 4)
                        .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel23)
                        .addGap(1, 1, 1)
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(163, Short.MAX_VALUE))))
        );
        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addComponent(jPanel8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel7Layout.createSequentialGroup()
                        .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(numeroCuentaB, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jButton2)
                            .addComponent(limpiarFiltros))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(empleadoSeleccion1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel20))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(tipoCuentaB, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel14)
                            .addComponent(jButton1)))
                    .addComponent(jLabel13))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(tipoTransaccionB, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel12))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(jLabel21)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jScrollPane4, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel22, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel23, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 226, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Reportes", jPanel7);

        jPanel10.setBackground(new java.awt.Color(30, 80, 109));

        jLabel15.setFont(new java.awt.Font("Ubuntu", 0, 36)); // NOI18N
        jLabel15.setForeground(new java.awt.Color(255, 255, 255));
        jLabel15.setText("Registro de Empleados");

        javax.swing.GroupLayout jPanel10Layout = new javax.swing.GroupLayout(jPanel10);
        jPanel10.setLayout(jPanel10Layout);
        jPanel10Layout.setHorizontalGroup(
            jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel10Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel15)
                .addContainerGap(571, Short.MAX_VALUE))
        );
        jPanel10Layout.setVerticalGroup(
            jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel10Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel15)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel11.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Datos", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Dialog", 0, 24), new java.awt.Color(0, 80, 136))); // NOI18N

        jLabel16.setText("Nombre");

        jLabel17.setText("Apellido");

        jLabel18.setText("Fecha Nacimiento");

        eFecha.setDateFormatString("dd/MM/yyyy");

        Regsitrar_Empleado.setBackground(new java.awt.Color(33, 123, 74));
        Regsitrar_Empleado.setForeground(new java.awt.Color(255, 255, 255));
        Regsitrar_Empleado.setText("Registrar");
        Regsitrar_Empleado.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Regsitrar_EmpleadoActionPerformed(evt);
            }
        });

        cancelarEmpleado.setBackground(new java.awt.Color(187, 26, 41));
        cancelarEmpleado.setForeground(new java.awt.Color(255, 255, 255));
        cancelarEmpleado.setText("Cancelar");
        cancelarEmpleado.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelarEmpleadoActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel11Layout = new javax.swing.GroupLayout(jPanel11);
        jPanel11.setLayout(jPanel11Layout);
        jPanel11Layout.setHorizontalGroup(
            jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel11Layout.createSequentialGroup()
                .addGap(37, 37, 37)
                .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel18)
                    .addComponent(jLabel17)
                    .addComponent(jLabel16))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(eNombre)
                        .addComponent(eApellido)
                        .addComponent(eFecha, javax.swing.GroupLayout.DEFAULT_SIZE, 202, Short.MAX_VALUE))
                    .addGroup(jPanel11Layout.createSequentialGroup()
                        .addComponent(Regsitrar_Empleado, javax.swing.GroupLayout.PREFERRED_SIZE, 151, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(cancelarEmpleado, javax.swing.GroupLayout.PREFERRED_SIZE, 151, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel11Layout.setVerticalGroup(
            jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel11Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel16)
                    .addComponent(eNombre, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel17)
                    .addComponent(eApellido, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(eFecha, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel18))
                .addGap(18, 18, 18)
                .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Regsitrar_Empleado)
                    .addComponent(cancelarEmpleado))
                .addContainerGap(211, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel9Layout = new javax.swing.GroupLayout(jPanel9);
        jPanel9.setLayout(jPanel9Layout);
        jPanel9Layout.setHorizontalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel10, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jPanel11, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jPanel9Layout.setVerticalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel9Layout.createSequentialGroup()
                .addComponent(jPanel10, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel11, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Registro de Empleados", jPanel9);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane1)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane1)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void guardarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_guardarActionPerformed
        // Asignación de los valores insertados a variables
        String admNombre = this.nombre.getText();
        String admApellido = this.apellido.getText();
        Date admFecha = this.fecha.getDate();
        String admTipoCuenta = this.tipoCuenta.getSelectedItem().toString();
        // Transformación de la fecha a string
        String formato = "dd/MM/yyyy";
        SimpleDateFormat sdf = new SimpleDateFormat(formato);
        // Creación de Cliente
        int comprobacion = 0;

        if (this.tipoCuenta.getSelectedIndex() == 0) {
            comprobacion = 4;
        }
        if (this.fecha.getDate() == null) {
            comprobacion = 3;
        }
        if (admApellido.length() == 0) {
            comprobacion = 2;
        }
        if (admNombre.length() == 0) {
            comprobacion = 1;
        }

        switch (comprobacion) {
            case 0:
                Cliente cliente = new Cliente(admTipoCuenta, admNombre, admApellido, sdf.format(admFecha));
                listaCliente.add(cliente);
                // Alert con información
                JOptionPane.showMessageDialog(null, "Por Favor Anote su Número de Cuenta");
                JOptionPane.showMessageDialog(null, "Cliente Registrado" + "\nNombre: " + cliente.getNombre()
                        + "\nApellido: " + cliente.getApellido() + "\nFecha: " + cliente.getFecha() + "\nEdad: "
                        + cliente.getEdad() + "\nN° Cuenta: " + cliente.getNumeroCuenta()
                        + "\nTipo: " + cliente.getTipoCuenta() + "\nSaldo: " + cliente.getSaldo());
                this.nombre.setText("");
                this.apellido.setText("");
                this.fecha.setDate(null);
                this.tipoCuenta.setSelectedIndex(0);
                break;
            case 1:
                JOptionPane.showMessageDialog(null, "Debe ingresar un Nombre");
                break;
            case 2:
                JOptionPane.showMessageDialog(null, "Debe ingresar un Apellido");
                break;
            case 3:
                JOptionPane.showMessageDialog(null, "Debe seleccionar una Fecha");
                break;
            case 4:
                JOptionPane.showMessageDialog(null, "Debe seleccionar un Tipo de Cuenta");
                break;
            default:
                break;
        }
    }//GEN-LAST:event_guardarActionPerformed

    private void cancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelarActionPerformed
        this.nombre.setText("");
        this.apellido.setText("");
        this.fecha.setDate(null);
        this.tipoCuenta.setSelectedIndex(0);
    }//GEN-LAST:event_cancelarActionPerformed

    private void transaccionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_transaccionActionPerformed
        //Seleccionamos el valor de los campos de transacciones
        String empleado = this.empleadoSeleccion.getSelectedItem().toString();
        String tipo = this.tipoTransaccion.getSelectedItem().toString();
        String cuenta = this.numeroCuenta.getText();
        String persona = this.depositante.getText();
        int valor = Integer.parseInt(saldo.getValue().toString());
        //validaciones
        int comprobacion = 0;
        int r = 0;
        int i = 0;

        if (valor <= 0) {
            comprobacion = 5;
        }
        if (persona.length() == 0) {
            comprobacion = 4;
        }
        if (cuenta.length() == 0) {
            comprobacion = 3;
        } else {
            r = 1;
        }
        if (this.tipoTransaccion.getSelectedIndex() == 0) {
            comprobacion = 2;
        }
        if (this.empleadoSeleccion.getSelectedIndex() == 0) {
            comprobacion = 1;
        }

        switch (comprobacion) {
            case 0:
                if ("Depósito".equals(tipo)) {
                    for (i = 0; i < listaCliente.size(); i++) {
                        if (listaCliente.get(i).getNumeroCuenta().equals(cuenta)) {
                            valorprev = listaCliente.get(i).getSaldo();
                            listaCliente.get(i).setSaldo(valorprev + valor);
                            transacciones registro = new transacciones(tipo, cuenta, persona, valor, listaCliente.get(i).getTipoCuenta(), listaCliente.get(i).getNombre() + " " + listaCliente.get(i).getApellido(), empleado);
                            listaRegistro.add(registro);
                            r = 2;
                            break;
                        }/*
                        if (this.numeroCuenta.getText().length() > 0) {
                            r = 1;
                            break;
                        }*/
                    }
                    break;
                }
                if ("Retiro".equals(tipo)) {
                    for (i = 0; i < listaCliente.size(); i++) {
                        if (listaCliente.get(i).getNumeroCuenta().equals(cuenta) & listaCliente.get(i).getSaldo() >= valor) {
                            valorprev = listaCliente.get(i).getSaldo();
                            listaCliente.get(i).setSaldo(valorprev - valor);
                            transacciones registro = new transacciones(tipo, cuenta, persona, valor, listaCliente.get(i).getTipoCuenta(), listaCliente.get(i).getNombre() + " " + listaCliente.get(i).getApellido(), empleado);
                            listaRegistro.add(registro);
                            r = 3;
                            break;
                        }

                        if (listaCliente.get(i).getNumeroCuenta().equals(cuenta) & valor > listaCliente.get(i).getSaldo()) {
                            r = 4;
                            break;
                        }/*
                        if (this.numeroCuenta.getText().length() > 0) {
                            r = 1;
                            break;
                        }*/
                    }

                    break;
                }
            case 1:
                JOptionPane.showMessageDialog(null, "Debe Seleccionar a un Empleado");
                break;
            case 2:
                JOptionPane.showMessageDialog(null, "Debe Seleccionar un Tipo de Transacción");
                break;
            case 3:
                JOptionPane.showMessageDialog(null, "Debe Ingresar un Número de Cuenta");
                break;
            case 4:
                JOptionPane.showMessageDialog(null, "Debe Ingresar el Nombre del Depositante");
                break;
            case 5:
                JOptionPane.showMessageDialog(null, "Debe Ingresar un Valor Válido");
                break;
            default:
                break;
        }

        switch (r) {

            case 1:

                JOptionPane.showMessageDialog(null, "Cuenta no encontrada");

                break;

            case 2:
                JOptionPane.showMessageDialog(null, "Transacción realizada a la cuenta N°: " + listaCliente.get(i).getNumeroCuenta()
                        + "\nNombre del Titular: " + listaCliente.get(i).getNombre() + " " + listaCliente.get(i).getApellido()
                        + "\nValor anterior: $" + valorprev + "\nValor Ingresado: $" + valor
                        + "\nValor del Saldo: $" + listaCliente.get(i).getSaldo());
                this.empleadoSeleccion.setSelectedIndex(0);
                this.tipoTransaccion.setSelectedIndex(0);
                this.numeroCuenta.setText("");
                this.depositante.setText("");
                this.saldo.setValue(0);

                break;
            case 3:
                JOptionPane.showMessageDialog(null, "Transacción realizada a la cuenta N°: " + listaCliente.get(i).getNumeroCuenta()
                        + "\nNombre del Titular: " + listaCliente.get(i).getNombre() + " " + listaCliente.get(i).getApellido()
                        + "\nValor anterior: $" + valorprev + "\nValor Retirado: $" + valor
                        + "\nValor del Saldo: $" + listaCliente.get(i).getSaldo());
                this.empleadoSeleccion.setSelectedIndex(0);
                this.tipoTransaccion.setSelectedIndex(0);
                this.numeroCuenta.setText("");
                this.depositante.setText("");
                this.saldo.setValue(0);
                break;
            case 4:
                JOptionPane.showMessageDialog(null, "Saldo insuficiente en la cuenta");
                break;
            default:
                break;

        }
    }//GEN-LAST:event_transaccionActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        mostrar();
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        buscar();
    }//GEN-LAST:event_jButton2ActionPerformed

    private void Regsitrar_EmpleadoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Regsitrar_EmpleadoActionPerformed
        // Asignación de los valores insertados a variables
        String empleadoNombre = this.eNombre.getText();
        String empleadoApellido = this.eApellido.getText();
        Date empleadoFecha = this.eFecha.getDate();
        // Transformación de la fecha a string
        String formato = "dd/MM/yyyy";
        SimpleDateFormat sdf = new SimpleDateFormat(formato);
        // Creación de Empleado
        int comprobacion = 0;

        if (this.eFecha.getDate() == null) {
            comprobacion = 3;
        }
        if (empleadoApellido.length() == 0) {
            comprobacion = 2;
        }
        if (empleadoNombre.length() == 0) {
            comprobacion = 1;
        }
        switch (comprobacion) {
            case 0:
                Empleado empleado = new Empleado(empleadoNombre, empleadoApellido, sdf.format(empleadoFecha));
                listaEmpleado.add(empleado);
                // Alert con información
                JOptionPane.showMessageDialog(null, "Empleado Registrado" + "\nNombre: " + empleado.getNombre()
                        + "\nApellido: " + empleado.getApellido() + "\nFecha: " + empleado.getFecha() + "\nEdad: " + empleado.getEdad());
                cbempleado();
                this.eNombre.setText("");
                this.eApellido.setText("");
                this.eFecha.setDate(null);
                break;
            case 1:
                JOptionPane.showMessageDialog(null, "Debe ingresar un Nombre");
                break;
            case 2:
                JOptionPane.showMessageDialog(null, "Debe ingresar un Apellido");
                break;
            case 3:
                JOptionPane.showMessageDialog(null, "Debe seleccionar una Fecha");
                break;
            default:
                break;
        }
    }//GEN-LAST:event_Regsitrar_EmpleadoActionPerformed

    private void cancelarEmpleadoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelarEmpleadoActionPerformed
        this.eNombre.setText("");
        this.eApellido.setText("");
        this.eFecha.setDate(null);
    }//GEN-LAST:event_cancelarEmpleadoActionPerformed

    private void limpiarFiltrosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_limpiarFiltrosActionPerformed
        this.numeroCuentaB.setText("");
        this.empleadoSeleccion1.setSelectedIndex(0);
        this.tipoCuentaB.setSelectedIndex(0);
        this.tipoTransaccionB.setSelectedIndex(0);
    }//GEN-LAST:event_limpiarFiltrosActionPerformed
    public void cbempleado() {
        this.empleadoSeleccion.addItem(listaEmpleado.get(listaEmpleado.size() - 1).getNombre() + " " + listaEmpleado.get(listaEmpleado.size() - 1).getApellido());
        this.empleadoSeleccion1.addItem(listaEmpleado.get(listaEmpleado.size() - 1).getNombre() + " " + listaEmpleado.get(listaEmpleado.size() - 1).getApellido());
    }

    public void mostrar() {
        int total = 0;
        int totalD = 0;
        int totalR = 0;
        String matris[][] = new String[listaRegistro.size()][7];
        for (int i = 0; i < listaRegistro.size(); i++) {
            matris[i][0] = listaRegistro.get(i).getTipo();
            matris[i][1] = listaRegistro.get(i).getTipoCuenta();
            matris[i][2] = listaRegistro.get(i).getCuenta();
            matris[i][3] = listaRegistro.get(i).getTitular();
            matris[i][4] = "$" + listaRegistro.get(i).getSaldo() + "";
            matris[i][5] = listaRegistro.get(i).getDepositante();
            matris[i][6] = listaRegistro.get(i).getEmpleado();
            if (listaRegistro.get(i).getTipo().equals("Depósito")) {
                totalD = totalD + listaRegistro.get(i).getSaldo();
            }
            if (listaRegistro.get(i).getTipo().equals("Retiro")) {
                totalR = totalR + listaRegistro.get(i).getSaldo();
            }
            total = total + listaRegistro.get(i).getSaldo();
        };
        Tabla.setModel(new javax.swing.table.DefaultTableModel(
                matris,
                new String[]{
                    "Tipo Transaccion", "Tipo Cuenta", "N° Cuenta", "Titular", "Monto", "Depositante", "Empleado"
                }
        ));
        this.totalDeposito.setText("$" + totalD);
        this.totalRetiro.setText("$" + totalR);
        this.valorTotal.setText("$" + total);
        this.numeroCuentaB.setText("");
        this.empleadoSeleccion1.setSelectedIndex(0);
        this.tipoCuentaB.setSelectedIndex(0);
        this.tipoTransaccionB.setSelectedIndex(0);
    }

    public void buscar() {
        int R = 0;
        String matris1[][];
        String matris2[][];
        String matris3[][];
        String matris4[][];
        String matris5[][];
        String matris6[][];
        String matris7[][];
        String matris8[][];
        String matris9[][];
        String matris10[][];
        String matris11[][];
        String matris12[][];
        String matris13[][];
        String matris14[][];
        String matris15[][];
        String matris16[][];
        String matris17[][];
        String matris18[][];
        String matris19[][];
        String matris20[][];
        String matris21[][];
        String matris22[][];
        String matris23[][];
        String matris24[][];
        String matris25[][];
        if (this.tipoTransaccionB.getSelectedItem().toString().equals("Ver Depositos")) {
            R = 1;
        }
        if (this.tipoTransaccionB.getSelectedItem().toString().equals("Ver Retiros")) {
            R = 2;
        }
        if (this.tipoCuentaB.getSelectedItem().toString().equals("Cta.Ahorros")) {
            R = 3;
        }
        if (this.tipoCuentaB.getSelectedItem().toString().equals("Cta.Corriente")) {
            R = 4;
        }
        String texto = this.numeroCuentaB.getText();
        texto = texto.replaceAll(" ", "");
        if (texto.length() != 0) {
            R = 5;
        }
        if (this.empleadoSeleccion1.getSelectedIndex() != 0) {
            R = 6;
        }
        if (texto.length() != 0 & this.tipoTransaccionB.getSelectedItem().toString().equals("Ver Depositos")
                & this.empleadoSeleccion1.getSelectedIndex() != 0) {
            R = 7;
        }
        if (texto.length() != 0 & this.tipoTransaccionB.getSelectedItem().toString().equals("Ver Retiros")
                & this.empleadoSeleccion1.getSelectedIndex() != 0) {
            R = 8;
        }
        if (texto.length() != 0 & this.tipoTransaccionB.getSelectedItem().toString().equals("Ver Retiros")
                & this.tipoCuentaB.getSelectedIndex() != 0
                & this.empleadoSeleccion1.getSelectedIndex() != 0) {
            JOptionPane.showMessageDialog(null, "Filtro Innecesario\nYa que el Número de cuenta pertenece a un solo tipo de Cuenta");
        }
        if (texto.length() != 0 & this.tipoTransaccionB.getSelectedItem().toString().equals("Ver Depositos")
                & this.tipoCuentaB.getSelectedIndex() != 0
                & this.empleadoSeleccion1.getSelectedIndex() != 0) {
            JOptionPane.showMessageDialog(null, "Filtro Innecesario\nYa que el Número de cuenta pertenece a un solo tipo de Cuenta");
        }
        if (texto.length() != 0 & this.tipoTransaccionB.getSelectedItem().toString().equals("Ver Depositos")) {
            R = 9;
        }
        if (texto.length() != 0 & this.tipoTransaccionB.getSelectedItem().toString().equals("Ver Retiros")) {
            R = 10;
        }
        if (this.empleadoSeleccion1.getSelectedIndex() != 0 & this.tipoCuentaB.getSelectedItem().toString().equals("Cta.Ahorros")) {
            R = 11;
        }
        if (this.empleadoSeleccion1.getSelectedIndex() != 0 & this.tipoCuentaB.getSelectedItem().toString().equals("Cta.Corriente")) {
            R = 12;
        }
        if (this.empleadoSeleccion1.getSelectedIndex() != 0 & this.tipoTransaccionB.getSelectedItem().toString().equals("Ver Depositos")) {
            R = 13;
        }
        if (this.empleadoSeleccion1.getSelectedIndex() != 0 & this.tipoTransaccionB.getSelectedItem().toString().equals("Ver Retiros")) {
            R = 14;
        }

        if (this.tipoCuentaB.getSelectedItem().toString().equals("Cta.Ahorros") & this.tipoTransaccionB.getSelectedItem().toString().equals("Ver Depositos")) {
            R = 19;
        }
        if (this.tipoCuentaB.getSelectedItem().toString().equals("Cta.Ahorros") & this.tipoTransaccionB.getSelectedItem().toString().equals("Ver Retiros")) {
            R = 20;
        }
        if (this.tipoCuentaB.getSelectedItem().toString().equals("Cta.Corriente") & this.tipoTransaccionB.getSelectedItem().toString().equals("Ver Depositos")) {
            R = 21;
        }
        if (this.tipoCuentaB.getSelectedItem().toString().equals("Cta.Corriente") & this.tipoTransaccionB.getSelectedItem().toString().equals("Ver Retiros")) {
            R = 22;
        }
        if (this.empleadoSeleccion1.getSelectedIndex() != 0 & this.tipoCuentaB.getSelectedItem().toString().equals("Cta.Ahorros") & this.tipoTransaccionB.getSelectedItem().toString().equals("Ver Depositos")) {
            R = 15;
        }
        if (this.empleadoSeleccion1.getSelectedIndex() != 0 & this.tipoCuentaB.getSelectedItem().toString().equals("Cta.Ahorros") & this.tipoTransaccionB.getSelectedItem().toString().equals("Ver Retiros")) {
            R = 16;
        }
        if (this.empleadoSeleccion1.getSelectedIndex() != 0 & this.tipoCuentaB.getSelectedItem().toString().equals("Cta.Corriente") & this.tipoTransaccionB.getSelectedItem().toString().equals("Ver Depositos")) {
            R = 17;
        }
        if (this.empleadoSeleccion1.getSelectedIndex() != 0 & this.tipoCuentaB.getSelectedItem().toString().equals("Cta.Corriente") & this.tipoTransaccionB.getSelectedItem().toString().equals("Ver Retiros")) {
            R = 18;
        }
        if (texto.length() != 0 & this.empleadoSeleccion1.getSelectedIndex() != 0) {
            R = 23;
        }
        if (texto.length() != 0 & this.empleadoSeleccion1.getSelectedIndex() != 0 & this.tipoTransaccionB.getSelectedItem().toString().equals("Ver Depositos")) {
            R = 24;
        }
        if (texto.length() != 0 & this.empleadoSeleccion1.getSelectedIndex() != 0 & this.tipoTransaccionB.getSelectedItem().toString().equals("Ver Retiros")) {
            R = 25;
        }
        if (texto.length() != 0 & this.tipoCuentaB.getSelectedIndex() != 0) {
            JOptionPane.showMessageDialog(null, "Filtro Innecesario\nYa que el Número de cuenta pertenece a un solo tipo de Cuenta");
        }

        switch (R) {
            case 0:
                JOptionPane.showMessageDialog(null, "Por Favor Seleccione un Filtro de Búsqueda");
                break;
            case 1:
                int total1 = 0;
                int totalD1 = 0;
                int totalR1 = 0;
                int indiceMatriz1 = 0;
                matris1 = new String[listaRegistro.size()][7];

                for (int i = 0; i < listaRegistro.size(); i++) {
                    if (listaRegistro.get(i).getTipo().equals("Depósito")) {
                        matris1[indiceMatriz1][0] = listaRegistro.get(i).getTipo();
                        matris1[indiceMatriz1][1] = listaRegistro.get(i).getTipoCuenta();
                        matris1[indiceMatriz1][2] = listaRegistro.get(i).getCuenta();
                        matris1[indiceMatriz1][3] = listaRegistro.get(i).getTitular();
                        matris1[indiceMatriz1][4] = "$" + listaRegistro.get(i).getSaldo() + "";
                        matris1[indiceMatriz1][5] = listaRegistro.get(i).getDepositante();
                        matris1[indiceMatriz1][6] = listaRegistro.get(i).getEmpleado();
                        indiceMatriz1++;
                        if (listaRegistro.get(i).getTipo().equals("Depósito")) {
                            totalD1 = totalD1 + listaRegistro.get(i).getSaldo();
                        }
                        if (listaRegistro.get(i).getTipo().equals("Retiro")) {
                            totalR1 = totalR1 + listaRegistro.get(i).getSaldo();
                        }
                        total1 = total1 + listaRegistro.get(i).getSaldo();
                    }
                }
                Tabla.setModel(new javax.swing.table.DefaultTableModel(
                        matris1,
                        new String[]{
                            "Tipo Transaccion", "Tipo Cuenta", "N° Cuenta", "Titular", "Monto", "Depositante", "Empleado"
                        }
                ));
                this.totalDeposito.setText("$" + totalD1);
                this.totalRetiro.setText("$" + totalR1);
                this.valorTotal.setText("$" + total1);
                break;
            case 2:
                int total2 = 0;
                int totalD2 = 0;
                int totalR2 = 0;
                matris2 = new String[listaRegistro.size()][7];
                int indiceMatriz2 = 0;
                for (int i = 0; i < listaRegistro.size(); i++) {
                    if (listaRegistro.get(i).getTipo().equals("Retiro")) {
                        matris2[indiceMatriz2][0] = listaRegistro.get(i).getTipo();
                        matris2[indiceMatriz2][1] = listaRegistro.get(i).getTipoCuenta();
                        matris2[indiceMatriz2][2] = listaRegistro.get(i).getCuenta();
                        matris2[indiceMatriz2][3] = listaRegistro.get(i).getTitular();
                        matris2[indiceMatriz2][4] = "$" + listaRegistro.get(i).getSaldo() + "";
                        matris2[indiceMatriz2][5] = listaRegistro.get(i).getDepositante();
                        matris2[indiceMatriz2][6] = listaRegistro.get(i).getEmpleado();
                        indiceMatriz2++;
                        if (listaRegistro.get(i).getTipo().equals("Depósito")) {
                            totalD2 = totalD2 + listaRegistro.get(i).getSaldo();
                        }
                        if (listaRegistro.get(i).getTipo().equals("Retiro")) {
                            totalR2 = totalR2 + listaRegistro.get(i).getSaldo();
                        }
                        total2 = total2 + listaRegistro.get(i).getSaldo();
                    }
                }
                Tabla.setModel(new javax.swing.table.DefaultTableModel(
                        matris2,
                        new String[]{
                            "Tipo Transaccion", "Tipo Cuenta", "N° Cuenta", "Titular", "Monto", "Depositante", "Empleado"
                        }
                ));
                this.totalDeposito.setText("$" + totalD2);
                this.totalRetiro.setText("$" + totalR2);
                this.valorTotal.setText("$" + total2);
                break;
            case 3:
                int total3 = 0;
                int totalD3 = 0;
                int totalR3 = 0;
                int indiceMatriz3 = 0;
                matris3 = new String[listaRegistro.size()][7];
                for (int i = 0; i < listaRegistro.size(); i++) {
                    if (listaRegistro.get(i).getTipoCuenta().equals("Cta.Ahorros")) {
                        matris3[indiceMatriz3][0] = listaRegistro.get(i).getTipo();
                        matris3[indiceMatriz3][1] = listaRegistro.get(i).getTipoCuenta();
                        matris3[indiceMatriz3][2] = listaRegistro.get(i).getCuenta();
                        matris3[indiceMatriz3][3] = listaRegistro.get(i).getTitular();
                        matris3[indiceMatriz3][4] = "$" + listaRegistro.get(i).getSaldo() + "";
                        matris3[indiceMatriz3][5] = listaRegistro.get(i).getDepositante();
                        matris3[indiceMatriz3][6] = listaRegistro.get(i).getEmpleado();
                        indiceMatriz3++;
                        if (listaRegistro.get(i).getTipo().equals("Depósito")) {
                            totalD3 = totalD3 + listaRegistro.get(i).getSaldo();
                        }
                        if (listaRegistro.get(i).getTipo().equals("Retiro")) {
                            totalR3 = totalR3 + listaRegistro.get(i).getSaldo();
                        }
                        total3 = total3 + listaRegistro.get(i).getSaldo();
                    }
                }
                Tabla.setModel(new javax.swing.table.DefaultTableModel(
                        matris3,
                        new String[]{
                            "Tipo Transaccion", "Tipo Cuenta", "N° Cuenta", "Titular", "Monto", "Depositante", "Empleado"
                        }
                ));
                this.totalDeposito.setText("$" + totalD3);
                this.totalRetiro.setText("$" + totalR3);
                this.valorTotal.setText("$" + total3);
                break;
            case 4:
                int total4 = 0;
                int totalD4 = 0;
                int totalR4 = 0;
                int indiceMatriz4 = 0;
                matris4 = new String[listaRegistro.size()][7];
                for (int i = 0; i < listaRegistro.size(); i++) {
                    if (listaRegistro.get(i).getTipoCuenta().equals("Cta.Corriente")) {
                        matris4[indiceMatriz4][0] = listaRegistro.get(i).getTipo();
                        matris4[indiceMatriz4][1] = listaRegistro.get(i).getTipoCuenta();
                        matris4[indiceMatriz4][2] = listaRegistro.get(i).getCuenta();
                        matris4[indiceMatriz4][3] = listaRegistro.get(i).getTitular();
                        matris4[indiceMatriz4][4] = "$" + listaRegistro.get(i).getSaldo() + "";
                        matris4[indiceMatriz4][5] = listaRegistro.get(i).getDepositante();
                        matris4[indiceMatriz4][6] = listaRegistro.get(i).getEmpleado();
                        indiceMatriz4++;
                        if (listaRegistro.get(i).getTipo().equals("Depósito")) {
                            totalD4 = totalD4 + listaRegistro.get(i).getSaldo();
                        }
                        if (listaRegistro.get(i).getTipo().equals("Retiro")) {
                            totalR4 = totalR4 + listaRegistro.get(i).getSaldo();
                        }
                        total4 = total4 + listaRegistro.get(i).getSaldo();
                    }
                }
                Tabla.setModel(new javax.swing.table.DefaultTableModel(
                        matris4,
                        new String[]{
                            "Tipo Transaccion", "Tipo Cuenta", "N° Cuenta", "Titular", "Monto", "Depositante", "Empleado"
                        }
                ));
                this.totalDeposito.setText("$" + totalD4);
                this.totalRetiro.setText("$" + totalR4);
                this.valorTotal.setText("$" + total4);
                break;
            case 5:
                int total5 = 0;
                int totalD5 = 0;
                int totalR5 = 0;
                int indiceMatriz5 = 0;
                matris5 = new String[listaRegistro.size()][7];
                for (int i = 0; i < listaRegistro.size(); i++) {
                    if (listaRegistro.get(i).getCuenta().equals(texto)) {
                        matris5[indiceMatriz5][0] = listaRegistro.get(i).getTipo();
                        matris5[indiceMatriz5][1] = listaRegistro.get(i).getTipoCuenta();
                        matris5[indiceMatriz5][2] = listaRegistro.get(i).getCuenta();
                        matris5[indiceMatriz5][3] = listaRegistro.get(i).getTitular();
                        matris5[indiceMatriz5][4] = "$" + listaRegistro.get(i).getSaldo() + "";
                        matris5[indiceMatriz5][5] = listaRegistro.get(i).getDepositante();
                        matris5[indiceMatriz5][6] = listaRegistro.get(i).getEmpleado();
                        indiceMatriz5++;
                        if (listaRegistro.get(i).getTipo().equals("Depósito")) {
                            totalD5 = totalD5 + listaRegistro.get(i).getSaldo();
                        }
                        if (listaRegistro.get(i).getTipo().equals("Retiro")) {
                            totalR5 = totalR5 + listaRegistro.get(i).getSaldo();
                        }
                        total5 = total5 + listaRegistro.get(i).getSaldo();
                    }
                }
                Tabla.setModel(new javax.swing.table.DefaultTableModel(
                        matris5,
                        new String[]{
                            "Tipo Transaccion", "Tipo Cuenta", "N° Cuenta", "Titular", "Monto", "Depositante", "Empleado"
                        }
                ));
                this.totalDeposito.setText("$" + totalD5);
                this.totalRetiro.setText("$" + totalR5);
                this.valorTotal.setText("$" + total5);
                break;
            case 6:
                int total6 = 0;
                int totalD6 = 0;
                int totalR6 = 0;
                int indiceMatriz6 = 0;
                matris6 = new String[listaRegistro.size()][7];
                for (int i = 0; i < listaRegistro.size(); i++) {
                    if (this.empleadoSeleccion1.getSelectedItem().toString().equals(listaRegistro.get(i).getEmpleado())) {
                        matris6[indiceMatriz6][0] = listaRegistro.get(i).getTipo();
                        matris6[indiceMatriz6][1] = listaRegistro.get(i).getTipoCuenta();
                        matris6[indiceMatriz6][2] = listaRegistro.get(i).getCuenta();
                        matris6[indiceMatriz6][3] = listaRegistro.get(i).getTitular();
                        matris6[indiceMatriz6][4] = "$" + listaRegistro.get(i).getSaldo() + "";
                        matris6[indiceMatriz6][5] = listaRegistro.get(i).getDepositante();
                        matris6[indiceMatriz6][6] = listaRegistro.get(i).getEmpleado();
                        indiceMatriz6++;
                        if (listaRegistro.get(i).getTipo().equals("Depósito")) {
                            totalD6 = totalD6 + listaRegistro.get(i).getSaldo();
                        }
                        if (listaRegistro.get(i).getTipo().equals("Retiro")) {
                            totalR6 = totalR6 + listaRegistro.get(i).getSaldo();
                        }
                        total6 = total6 + listaRegistro.get(i).getSaldo();
                    }
                }
                ;
                Tabla.setModel(new javax.swing.table.DefaultTableModel(
                        matris6,
                        new String[]{
                            "Tipo Transaccion", "Tipo Cuenta", "N° Cuenta", "Titular", "Monto", "Depositante", "Empleado"
                        }
                ));
                this.totalDeposito.setText("$" + totalD6);
                this.totalRetiro.setText("$" + totalR6);
                this.valorTotal.setText("$" + total6);
                break;
            case 7:
                int total7 = 0;
                int totalD7 = 0;
                int totalR7 = 0;
                int indiceMatriz7 = 0;
                matris7 = new String[listaRegistro.size()][7];
                for (int i = 0; i < listaRegistro.size(); i++) {
                    if (listaRegistro.get(i).getTipo().equals("Depósito")
                            & listaRegistro.get(i).getCuenta().equals(texto)
                            & this.empleadoSeleccion1.getSelectedItem().toString().equals(listaRegistro.get(i).getEmpleado())) {
                        matris7[indiceMatriz7][0] = listaRegistro.get(i).getTipo();
                        matris7[indiceMatriz7][1] = listaRegistro.get(i).getTipoCuenta();
                        matris7[indiceMatriz7][2] = listaRegistro.get(i).getCuenta();
                        matris7[indiceMatriz7][3] = listaRegistro.get(i).getTitular();
                        matris7[indiceMatriz7][4] = "$" + listaRegistro.get(i).getSaldo() + "";
                        matris7[indiceMatriz7][5] = listaRegistro.get(i).getDepositante();
                        matris7[indiceMatriz7][6] = listaRegistro.get(i).getEmpleado();
                        indiceMatriz7++;
                        if (listaRegistro.get(i).getTipo().equals("Depósito")) {
                            totalD7 = totalD7 + listaRegistro.get(i).getSaldo();
                        }
                        if (listaRegistro.get(i).getTipo().equals("Retiro")) {
                            totalR7 = totalR7 + listaRegistro.get(i).getSaldo();
                        }
                        total7 = total7 + listaRegistro.get(i).getSaldo();
                    }
                }
                Tabla.setModel(new javax.swing.table.DefaultTableModel(
                        matris7,
                        new String[]{
                            "Tipo Transaccion", "Tipo Cuenta", "N° Cuenta", "Titular", "Monto", "Depositante", "Empleado"
                        }
                ));
                this.totalDeposito.setText("$" + totalD7);
                this.totalRetiro.setText("$" + totalR7);
                this.valorTotal.setText("$" + total7);
                break;
            case 8:
                int total8 = 0;
                int totalD8 = 0;
                int totalR8 = 0;
                int indiceMatriz8 = 0;
                matris8 = new String[listaRegistro.size()][7];
                for (int i = 0; i < listaRegistro.size(); i++) {
                    if (listaRegistro.get(i).getTipo().equals("Retiro")
                            & listaRegistro.get(i).getCuenta().equals(texto)
                            & this.empleadoSeleccion1.getSelectedItem().toString().equals(listaRegistro.get(i).getEmpleado())) {
                        matris8[indiceMatriz8][0] = listaRegistro.get(i).getTipo();
                        matris8[indiceMatriz8][1] = listaRegistro.get(i).getTipoCuenta();
                        matris8[indiceMatriz8][2] = listaRegistro.get(i).getCuenta();
                        matris8[indiceMatriz8][3] = listaRegistro.get(i).getTitular();
                        matris8[indiceMatriz8][4] = "$" + listaRegistro.get(i).getSaldo() + "";
                        matris8[indiceMatriz8][5] = listaRegistro.get(i).getDepositante();
                        matris8[indiceMatriz8][6] = listaRegistro.get(i).getEmpleado();
                        indiceMatriz8++;
                        if (listaRegistro.get(i).getTipo().equals("Depósito")) {
                            totalD8 = totalD8 + listaRegistro.get(i).getSaldo();
                        }
                        if (listaRegistro.get(i).getTipo().equals("Retiro")) {
                            totalR8 = totalR8 + listaRegistro.get(i).getSaldo();
                        }
                        total8 = total8 + listaRegistro.get(i).getSaldo();
                    }
                }
                Tabla.setModel(new javax.swing.table.DefaultTableModel(
                        matris8,
                        new String[]{
                            "Tipo Transaccion", "Tipo Cuenta", "N° Cuenta", "Titular", "Monto", "Depositante", "Empleado"
                        }
                ));
                this.totalDeposito.setText("$" + totalD8);
                this.totalRetiro.setText("$" + totalR8);
                this.valorTotal.setText("$" + total8);
                break;
            case 9:
                int total9 = 0;
                int totalD9 = 0;
                int totalR9 = 0;
                int indiceMatriz9 = 0;
                matris9 = new String[listaRegistro.size()][7];
                for (int i = 0; i < listaRegistro.size(); i++) {
                    if (listaRegistro.get(i).getCuenta().equals(texto) & listaRegistro.get(i).getTipo().equals("Depósito")) {
                        matris9[indiceMatriz9][0] = listaRegistro.get(i).getTipo();
                        matris9[indiceMatriz9][1] = listaRegistro.get(i).getTipoCuenta();
                        matris9[indiceMatriz9][2] = listaRegistro.get(i).getCuenta();
                        matris9[indiceMatriz9][3] = listaRegistro.get(i).getTitular();
                        matris9[indiceMatriz9][4] = "$" + listaRegistro.get(i).getSaldo() + "";
                        matris9[indiceMatriz9][5] = listaRegistro.get(i).getDepositante();
                        matris9[indiceMatriz9][6] = listaRegistro.get(i).getEmpleado();
                        indiceMatriz9++;
                        if (listaRegistro.get(i).getTipo().equals("Depósito")) {
                            totalD9 = totalD9 + listaRegistro.get(i).getSaldo();
                        }
                        if (listaRegistro.get(i).getTipo().equals("Retiro")) {
                            totalR9 = totalR9 + listaRegistro.get(i).getSaldo();
                        }
                        total9 = total9 + listaRegistro.get(i).getSaldo();
                    }
                }
                Tabla.setModel(new javax.swing.table.DefaultTableModel(
                        matris9,
                        new String[]{
                            "Tipo Transaccion", "Tipo Cuenta", "N° Cuenta", "Titular", "Monto", "Depositante", "Empleado"
                        }
                ));
                this.totalDeposito.setText("$" + totalD9);
                this.totalRetiro.setText("$" + totalR9);
                this.valorTotal.setText("$" + total9);
                break;
            case 10:
                int total10 = 0;
                int totalD10 = 0;
                int totalR10 = 0;
                int indiceMatriz10 = 0;
                matris10 = new String[listaRegistro.size()][7];
                for (int i = 0; i < listaRegistro.size(); i++) {
                    if (listaRegistro.get(i).getCuenta().equals(texto) & listaRegistro.get(i).getTipo().equals("Retiro")) {
                        matris10[indiceMatriz10][0] = listaRegistro.get(i).getTipo();
                        matris10[indiceMatriz10][1] = listaRegistro.get(i).getTipoCuenta();
                        matris10[indiceMatriz10][2] = listaRegistro.get(i).getCuenta();
                        matris10[indiceMatriz10][3] = listaRegistro.get(i).getTitular();
                        matris10[indiceMatriz10][4] = "$" + listaRegistro.get(i).getSaldo() + "";
                        matris10[indiceMatriz10][5] = listaRegistro.get(i).getDepositante();
                        matris10[indiceMatriz10][6] = listaRegistro.get(i).getEmpleado();
                        indiceMatriz10++;
                        if (listaRegistro.get(i).getTipo().equals("Depósito")) {
                            totalD10 = totalD10 + listaRegistro.get(i).getSaldo();
                        }
                        if (listaRegistro.get(i).getTipo().equals("Retiro")) {
                            totalR10 = totalR10 + listaRegistro.get(i).getSaldo();
                        }
                        total10 = total10 + listaRegistro.get(i).getSaldo();
                    }
                }
                Tabla.setModel(new javax.swing.table.DefaultTableModel(
                        matris10,
                        new String[]{
                            "Tipo Transaccion", "Tipo Cuenta", "N° Cuenta", "Titular", "Monto", "Depositante", "Empleado"
                        }
                ));
                this.totalDeposito.setText("$" + totalD10);
                this.totalRetiro.setText("$" + totalR10);
                this.valorTotal.setText("$" + total10);
                break;
            case 11:
                int total11 = 0;
                int totalD11 = 0;
                int totalR11 = 0;
                int indiceMatriz11 = 0;
                matris11 = new String[listaRegistro.size()][7];
                for (int i = 0; i < listaRegistro.size(); i++) {
                    if (this.empleadoSeleccion1.getSelectedItem().toString().equals(listaRegistro.get(i).getEmpleado()) & listaRegistro.get(i).getTipoCuenta().equals("Cta.Ahorros")) {
                        matris11[indiceMatriz11][0] = listaRegistro.get(i).getTipo();
                        matris11[indiceMatriz11][1] = listaRegistro.get(i).getTipoCuenta();
                        matris11[indiceMatriz11][2] = listaRegistro.get(i).getCuenta();
                        matris11[indiceMatriz11][3] = listaRegistro.get(i).getTitular();
                        matris11[indiceMatriz11][4] = "$" + listaRegistro.get(i).getSaldo() + "";
                        matris11[indiceMatriz11][5] = listaRegistro.get(i).getDepositante();
                        matris11[indiceMatriz11][6] = listaRegistro.get(i).getEmpleado();
                        indiceMatriz11++;
                        if (listaRegistro.get(i).getTipo().equals("Depósito")) {
                            totalD11 = totalD11 + listaRegistro.get(i).getSaldo();
                        }
                        if (listaRegistro.get(i).getTipo().equals("Retiro")) {
                            totalR11 = totalR11 + listaRegistro.get(i).getSaldo();
                        }
                        total11 = total11 + listaRegistro.get(i).getSaldo();
                    }
                }
                ;
                Tabla.setModel(new javax.swing.table.DefaultTableModel(
                        matris11,
                        new String[]{
                            "Tipo Transaccion", "Tipo Cuenta", "N° Cuenta", "Titular", "Monto", "Depositante", "Empleado"
                        }
                ));
                this.totalDeposito.setText("$" + totalD11);
                this.totalRetiro.setText("$" + totalR11);
                this.valorTotal.setText("$" + total11);
                break;
            case 12:
                int total12 = 0;
                int totalD12 = 0;
                int totalR12 = 0;
                int indiceMatriz12 = 0;
                matris12 = new String[listaRegistro.size()][7];
                for (int i = 0; i < listaRegistro.size(); i++) {
                    if (this.empleadoSeleccion1.getSelectedItem().toString().equals(listaRegistro.get(i).getEmpleado()) & listaRegistro.get(i).getTipoCuenta().equals("Cta.Corriente")) {
                        matris12[indiceMatriz12][0] = listaRegistro.get(i).getTipo();
                        matris12[indiceMatriz12][1] = listaRegistro.get(i).getTipoCuenta();
                        matris12[indiceMatriz12][2] = listaRegistro.get(i).getCuenta();
                        matris12[indiceMatriz12][3] = listaRegistro.get(i).getTitular();
                        matris12[indiceMatriz12][4] = "$" + listaRegistro.get(i).getSaldo() + "";
                        matris12[indiceMatriz12][5] = listaRegistro.get(i).getDepositante();
                        matris12[indiceMatriz12][6] = listaRegistro.get(i).getEmpleado();
                        indiceMatriz12++;
                        if (listaRegistro.get(i).getTipo().equals("Depósito")) {
                            totalD12 = totalD12 + listaRegistro.get(i).getSaldo();
                        }
                        if (listaRegistro.get(i).getTipo().equals("Retiro")) {
                            totalR12 = totalR12 + listaRegistro.get(i).getSaldo();
                        }
                        total12 = total12 + listaRegistro.get(i).getSaldo();
                    }
                }
                Tabla.setModel(new javax.swing.table.DefaultTableModel(
                        matris12,
                        new String[]{
                            "Tipo Transaccion", "Tipo Cuenta", "N° Cuenta", "Titular", "Monto", "Depositante", "Empleado"
                        }
                ));
                this.totalDeposito.setText("$" + totalD12);
                this.totalRetiro.setText("$" + totalR12);
                this.valorTotal.setText("$" + total12);
                break;
            case 13:
                int total13 = 0;
                int totalD13 = 0;
                int totalR13 = 0;
                int indiceMatriz13 = 0;
                matris13 = new String[listaRegistro.size()][7];
                for (int i = 0; i < listaRegistro.size(); i++) {
                    if (this.empleadoSeleccion1.getSelectedItem().toString().equals(listaRegistro.get(i).getEmpleado()) & listaRegistro.get(i).getTipo().equals("Depósito")) {
                        matris13[indiceMatriz13][0] = listaRegistro.get(i).getTipo();
                        matris13[indiceMatriz13][1] = listaRegistro.get(i).getTipoCuenta();
                        matris13[indiceMatriz13][2] = listaRegistro.get(i).getCuenta();
                        matris13[indiceMatriz13][3] = listaRegistro.get(i).getTitular();
                        matris13[indiceMatriz13][4] = "$" + listaRegistro.get(i).getSaldo() + "";
                        matris13[indiceMatriz13][5] = listaRegistro.get(i).getDepositante();
                        matris13[indiceMatriz13][6] = listaRegistro.get(i).getEmpleado();
                        indiceMatriz13++;
                        if (listaRegistro.get(i).getTipo().equals("Depósito")) {
                            totalD13 = totalD13 + listaRegistro.get(i).getSaldo();
                        }
                        if (listaRegistro.get(i).getTipo().equals("Retiro")) {
                            totalR13 = totalR13 + listaRegistro.get(i).getSaldo();
                        }
                        total13 = total13 + listaRegistro.get(i).getSaldo();
                    }
                }
                ;
                Tabla.setModel(new javax.swing.table.DefaultTableModel(
                        matris13,
                        new String[]{
                            "Tipo Transaccion", "Tipo Cuenta", "N° Cuenta", "Titular", "Monto", "Depositante", "Empleado"
                        }
                ));
                this.totalDeposito.setText("$" + totalD13);
                this.totalRetiro.setText("$" + totalR13);
                this.valorTotal.setText("$" + total13);
                break;
            case 14:
                int total14 = 0;
                int totalD14 = 0;
                int totalR14 = 0;
                int indiceMatriz14 = 0;
                matris14 = new String[listaRegistro.size()][7];
                for (int i = 0; i < listaRegistro.size(); i++) {
                    if (this.empleadoSeleccion1.getSelectedItem().toString().equals(listaRegistro.get(i).getEmpleado()) & listaRegistro.get(i).getTipo().equals("Retiro")) {
                        matris14[indiceMatriz14][0] = listaRegistro.get(i).getTipo();
                        matris14[indiceMatriz14][1] = listaRegistro.get(i).getTipoCuenta();
                        matris14[indiceMatriz14][2] = listaRegistro.get(i).getCuenta();
                        matris14[indiceMatriz14][3] = listaRegistro.get(i).getTitular();
                        matris14[indiceMatriz14][4] = "$" + listaRegistro.get(i).getSaldo() + "";
                        matris14[indiceMatriz14][5] = listaRegistro.get(i).getDepositante();
                        matris14[indiceMatriz14][6] = listaRegistro.get(i).getEmpleado();
                        indiceMatriz14++;
                        if (listaRegistro.get(i).getTipo().equals("Depósito")) {
                            totalD14 = totalD14 + listaRegistro.get(i).getSaldo();
                        }
                        if (listaRegistro.get(i).getTipo().equals("Retiro")) {
                            totalR14 = totalR14 + listaRegistro.get(i).getSaldo();
                        }
                        total14 = total14 + listaRegistro.get(i).getSaldo();
                    }
                }
                Tabla.setModel(new javax.swing.table.DefaultTableModel(
                        matris14,
                        new String[]{
                            "Tipo Transaccion", "Tipo Cuenta", "N° Cuenta", "Titular", "Monto", "Depositante", "Empleado"
                        }
                ));
                this.totalDeposito.setText("$" + totalD14);
                this.totalRetiro.setText("$" + totalR14);
                this.valorTotal.setText("$" + total14);
                break;
            case 15:
                int total15 = 0;
                int totalD15 = 0;
                int totalR15 = 0;
                int indiceMatriz15 = 0;
                matris15 = new String[listaRegistro.size()][7];
                for (int i = 0; i < listaRegistro.size(); i++) {
                    if (this.empleadoSeleccion1.getSelectedItem().toString().equals(listaRegistro.get(i).getEmpleado()) & listaRegistro.get(i).getTipoCuenta().equals("Cta.Ahorros") & listaRegistro.get(i).getTipo().equals("Depósito")) {
                        matris15[indiceMatriz15][0] = listaRegistro.get(i).getTipo();
                        matris15[indiceMatriz15][1] = listaRegistro.get(i).getTipoCuenta();
                        matris15[indiceMatriz15][2] = listaRegistro.get(i).getCuenta();
                        matris15[indiceMatriz15][3] = listaRegistro.get(i).getTitular();
                        matris15[indiceMatriz15][4] = "$" + listaRegistro.get(i).getSaldo() + "";
                        matris15[indiceMatriz15][5] = listaRegistro.get(i).getDepositante();
                        matris15[indiceMatriz15][6] = listaRegistro.get(i).getEmpleado();
                        indiceMatriz15++;
                        if (listaRegistro.get(i).getTipo().equals("Depósito")) {
                            totalD15 = totalD15 + listaRegistro.get(i).getSaldo();
                        }
                        if (listaRegistro.get(i).getTipo().equals("Retiro")) {
                            totalR15 = totalR15 + listaRegistro.get(i).getSaldo();
                        }
                        total15 = total15 + listaRegistro.get(i).getSaldo();
                    }
                }
                Tabla.setModel(new javax.swing.table.DefaultTableModel(
                        matris15,
                        new String[]{
                            "Tipo Transaccion", "Tipo Cuenta", "N° Cuenta", "Titular", "Monto", "Depositante", "Empleado"
                        }
                ));
                this.totalDeposito.setText("$" + totalD15);
                this.totalRetiro.setText("$" + totalR15);
                this.valorTotal.setText("$" + total15);
                break;
            case 16:
                int total16 = 0;
                int totalD16 = 0;
                int totalR16 = 0;
                int indiceMatriz16 = 0;
                matris16 = new String[listaRegistro.size()][7];
                for (int i = 0; i < listaRegistro.size(); i++) {
                    if (this.empleadoSeleccion1.getSelectedItem().toString().equals(listaRegistro.get(i).getEmpleado()) & listaRegistro.get(i).getTipoCuenta().equals("Cta.Ahorros") & listaRegistro.get(i).getTipo().equals("Retiro")) {
                        matris16[indiceMatriz16][0] = listaRegistro.get(i).getTipo();
                        matris16[indiceMatriz16][1] = listaRegistro.get(i).getTipoCuenta();
                        matris16[indiceMatriz16][2] = listaRegistro.get(i).getCuenta();
                        matris16[indiceMatriz16][3] = listaRegistro.get(i).getTitular();
                        matris16[indiceMatriz16][4] = "$" + listaRegistro.get(i).getSaldo() + "";
                        matris16[indiceMatriz16][5] = listaRegistro.get(i).getDepositante();
                        matris16[indiceMatriz16][6] = listaRegistro.get(i).getEmpleado();
                        indiceMatriz16++;
                        if (listaRegistro.get(i).getTipo().equals("Depósito")) {
                            totalD16 = totalD16 + listaRegistro.get(i).getSaldo();
                        }
                        if (listaRegistro.get(i).getTipo().equals("Retiro")) {
                            totalR16 = totalR16 + listaRegistro.get(i).getSaldo();
                        }
                        total16 = total16 + listaRegistro.get(i).getSaldo();
                    }
                }
                Tabla.setModel(new javax.swing.table.DefaultTableModel(
                        matris16,
                        new String[]{
                            "Tipo Transaccion", "Tipo Cuenta", "N° Cuenta", "Titular", "Monto", "Depositante", "Empleado"
                        }
                ));
                this.totalDeposito.setText("$" + totalD16);
                this.totalRetiro.setText("$" + totalR16);
                this.valorTotal.setText("$" + total16);
                break;
            case 17:
                int total17 = 0;
                int totalD17 = 0;
                int totalR17 = 0;
                int indiceMatriz17 = 0;
                matris17 = new String[listaRegistro.size()][7];
                for (int i = 0; i < listaRegistro.size(); i++) {
                    if (this.empleadoSeleccion1.getSelectedItem().toString().equals(listaRegistro.get(i).getEmpleado()) & listaRegistro.get(i).getTipoCuenta().equals("Cta.Corriente") & listaRegistro.get(i).getTipo().equals("Depósito")) {
                        matris17[indiceMatriz17][0] = listaRegistro.get(i).getTipo();
                        matris17[indiceMatriz17][1] = listaRegistro.get(i).getTipoCuenta();
                        matris17[indiceMatriz17][2] = listaRegistro.get(i).getCuenta();
                        matris17[indiceMatriz17][3] = listaRegistro.get(i).getTitular();
                        matris17[indiceMatriz17][4] = "$" + listaRegistro.get(i).getSaldo() + "";
                        matris17[indiceMatriz17][5] = listaRegistro.get(i).getDepositante();
                        matris17[indiceMatriz17][6] = listaRegistro.get(i).getEmpleado();
                        indiceMatriz17++;
                        if (listaRegistro.get(i).getTipo().equals("Depósito")) {
                            totalD17 = totalD17 + listaRegistro.get(i).getSaldo();
                        }
                        if (listaRegistro.get(i).getTipo().equals("Retiro")) {
                            totalR17 = totalR17 + listaRegistro.get(i).getSaldo();
                        }
                        total17 = total17 + listaRegistro.get(i).getSaldo();
                    }
                }
                Tabla.setModel(new javax.swing.table.DefaultTableModel(
                        matris17,
                        new String[]{
                            "Tipo Transaccion", "Tipo Cuenta", "N° Cuenta", "Titular", "Monto", "Depositante", "Empleado"
                        }
                ));
                this.totalDeposito.setText("$" + totalD17);
                this.totalRetiro.setText("$" + totalR17);
                this.valorTotal.setText("$" + total17);
                break;
            case 18:
                int total18 = 0;
                int totalD18 = 0;
                int totalR18 = 0;
                int indiceMatriz18 = 0;
                matris18 = new String[listaRegistro.size()][7];
                for (int i = 0; i < listaRegistro.size(); i++) {
                    if (this.empleadoSeleccion1.getSelectedItem().toString().equals(listaRegistro.get(i).getEmpleado()) & listaRegistro.get(i).getTipoCuenta().equals("Cta.Corriente") & listaRegistro.get(i).getTipo().equals("Retiro")) {
                        matris18[indiceMatriz18][0] = listaRegistro.get(i).getTipo();
                        matris18[indiceMatriz18][1] = listaRegistro.get(i).getTipoCuenta();
                        matris18[indiceMatriz18][2] = listaRegistro.get(i).getCuenta();
                        matris18[indiceMatriz18][3] = listaRegistro.get(i).getTitular();
                        matris18[indiceMatriz18][4] = "$" + listaRegistro.get(i).getSaldo() + "";
                        matris18[indiceMatriz18][5] = listaRegistro.get(i).getDepositante();
                        matris18[indiceMatriz18][6] = listaRegistro.get(i).getEmpleado();
                        indiceMatriz18++;
                        if (listaRegistro.get(i).getTipo().equals("Depósito")) {
                            totalD18 = totalD18 + listaRegistro.get(i).getSaldo();
                        }
                        if (listaRegistro.get(i).getTipo().equals("Retiro")) {
                            totalR18 = totalR18 + listaRegistro.get(i).getSaldo();
                        }
                        total18 = total18 + listaRegistro.get(i).getSaldo();
                    }
                }
                ;
                Tabla.setModel(new javax.swing.table.DefaultTableModel(
                        matris18,
                        new String[]{
                            "Tipo Transaccion", "Tipo Cuenta", "N° Cuenta", "Titular", "Monto", "Depositante", "Empleado"
                        }
                ));
                this.totalDeposito.setText("$" + totalD18);
                this.totalRetiro.setText("$" + totalR18);
                this.valorTotal.setText("$" + total18);
                break;
            case 19:
                int total19 = 0;
                int totalD19 = 0;
                int totalR19 = 0;
                int indiceMatriz19 = 0;
                matris19 = new String[listaRegistro.size()][7];
                for (int i = 0; i < listaRegistro.size(); i++) {
                    if (listaRegistro.get(i).getTipoCuenta().equals("Cta.Ahorros") & listaRegistro.get(i).getTipo().equals("Depósito")) {
                        matris19[indiceMatriz19][0] = listaRegistro.get(i).getTipo();
                        matris19[indiceMatriz19][1] = listaRegistro.get(i).getTipoCuenta();
                        matris19[indiceMatriz19][2] = listaRegistro.get(i).getCuenta();
                        matris19[indiceMatriz19][3] = listaRegistro.get(i).getTitular();
                        matris19[indiceMatriz19][4] = "$" + listaRegistro.get(i).getSaldo() + "";
                        matris19[indiceMatriz19][5] = listaRegistro.get(i).getDepositante();
                        matris19[indiceMatriz19][6] = listaRegistro.get(i).getEmpleado();
                        indiceMatriz19++;
                        if (listaRegistro.get(i).getTipo().equals("Depósito")) {
                            totalD19 = totalD19 + listaRegistro.get(i).getSaldo();
                        }
                        if (listaRegistro.get(i).getTipo().equals("Retiro")) {
                            totalR19 = totalR19 + listaRegistro.get(i).getSaldo();
                        }
                        total19 = total19 + listaRegistro.get(i).getSaldo();
                    }
                }
                ;
                Tabla.setModel(new javax.swing.table.DefaultTableModel(
                        matris19,
                        new String[]{
                            "Tipo Transaccion", "Tipo Cuenta", "N° Cuenta", "Titular", "Monto", "Depositante", "Empleado"
                        }
                ));
                this.totalDeposito.setText("$" + totalD19);
                this.totalRetiro.setText("$" + totalR19);
                this.valorTotal.setText("$" + total19);
                break;
            case 20:
                int total20 = 0;
                int totalD20 = 0;
                int totalR20 = 0;
                int indiceMatriz20 = 0;
                matris20 = new String[listaRegistro.size()][7];
                for (int i = 0; i < listaRegistro.size(); i++) {
                    if (listaRegistro.get(i).getTipoCuenta().equals("Cta.Ahorros") & listaRegistro.get(i).getTipo().equals("Retiro")) {
                        matris20[indiceMatriz20][0] = listaRegistro.get(i).getTipo();
                        matris20[indiceMatriz20][1] = listaRegistro.get(i).getTipoCuenta();
                        matris20[indiceMatriz20][2] = listaRegistro.get(i).getCuenta();
                        matris20[indiceMatriz20][3] = listaRegistro.get(i).getTitular();
                        matris20[indiceMatriz20][4] = "$" + listaRegistro.get(i).getSaldo() + "";
                        matris20[indiceMatriz20][5] = listaRegistro.get(i).getDepositante();
                        matris20[indiceMatriz20][6] = listaRegistro.get(i).getEmpleado();
                        indiceMatriz20++;
                        if (listaRegistro.get(i).getTipo().equals("Depósito")) {
                            totalD20 = totalD20 + listaRegistro.get(i).getSaldo();
                        }
                        if (listaRegistro.get(i).getTipo().equals("Retiro")) {
                            totalR20 = totalR20 + listaRegistro.get(i).getSaldo();
                        }
                        total20 = total20 + listaRegistro.get(i).getSaldo();
                    }
                }
                ;
                Tabla.setModel(new javax.swing.table.DefaultTableModel(
                        matris20,
                        new String[]{
                            "Tipo Transaccion", "Tipo Cuenta", "N° Cuenta", "Titular", "Monto", "Depositante", "Empleado"
                        }
                ));
                this.totalDeposito.setText("$" + totalD20);
                this.totalRetiro.setText("$" + totalR20);
                this.valorTotal.setText("$" + total20);
                break;
            case 21:
                int total21 = 0;
                int totalD21 = 0;
                int totalR21 = 0;
                int indiceMatriz21 = 0;
                matris21 = new String[listaRegistro.size()][7];
                for (int i = 0; i < listaRegistro.size(); i++) {
                    if (listaRegistro.get(i).getTipoCuenta().equals("Cta.Corriente") & listaRegistro.get(i).getTipo().equals("Depósito")) {
                        matris21[indiceMatriz21][0] = listaRegistro.get(i).getTipo();
                        matris21[indiceMatriz21][1] = listaRegistro.get(i).getTipoCuenta();
                        matris21[indiceMatriz21][2] = listaRegistro.get(i).getCuenta();
                        matris21[indiceMatriz21][3] = listaRegistro.get(i).getTitular();
                        matris21[indiceMatriz21][4] = "$" + listaRegistro.get(i).getSaldo() + "";
                        matris21[indiceMatriz21][5] = listaRegistro.get(i).getDepositante();
                        matris21[indiceMatriz21][6] = listaRegistro.get(i).getEmpleado();
                        indiceMatriz21++;
                        if (listaRegistro.get(i).getTipo().equals("Depósito")) {
                            totalD21 = totalD21 + listaRegistro.get(i).getSaldo();
                        }
                        if (listaRegistro.get(i).getTipo().equals("Retiro")) {
                            totalR21 = totalR21 + listaRegistro.get(i).getSaldo();
                        }
                        total21 = total21 + listaRegistro.get(i).getSaldo();
                    }
                }
                Tabla.setModel(new javax.swing.table.DefaultTableModel(
                        matris21,
                        new String[]{
                            "Tipo Transaccion", "Tipo Cuenta", "N° Cuenta", "Titular", "Monto", "Depositante", "Empleado"
                        }
                ));
                this.totalDeposito.setText("$" + totalD21);
                this.totalRetiro.setText("$" + totalR21);
                this.valorTotal.setText("$" + total21);
                break;
            case 22:
                int total22 = 0;
                int totalD22 = 0;
                int totalR22 = 0;
                int indiceMatriz22 = 0;
                matris22 = new String[listaRegistro.size()][7];
                for (int i = 0; i < listaRegistro.size(); i++) {
                    if (listaRegistro.get(i).getTipoCuenta().equals("Cta.Corriente") & listaRegistro.get(i).getTipo().equals("Retiro")) {
                        matris22[indiceMatriz22][0] = listaRegistro.get(i).getTipo();
                        matris22[indiceMatriz22][1] = listaRegistro.get(i).getTipoCuenta();
                        matris22[indiceMatriz22][2] = listaRegistro.get(i).getCuenta();
                        matris22[indiceMatriz22][3] = listaRegistro.get(i).getTitular();
                        matris22[indiceMatriz22][4] = "$" + listaRegistro.get(i).getSaldo() + "";
                        matris22[indiceMatriz22][5] = listaRegistro.get(i).getDepositante();
                        matris22[indiceMatriz22][6] = listaRegistro.get(i).getEmpleado();
                        indiceMatriz22++;
                        if (listaRegistro.get(i).getTipo().equals("Depósito")) {
                            totalD22 = totalD22 + listaRegistro.get(i).getSaldo();
                        }
                        if (listaRegistro.get(i).getTipo().equals("Retiro")) {
                            totalR22 = totalR22 + listaRegistro.get(i).getSaldo();
                        }
                        total22 = total22 + listaRegistro.get(i).getSaldo();
                    }
                }
                ;
                Tabla.setModel(new javax.swing.table.DefaultTableModel(
                        matris22,
                        new String[]{
                            "Tipo Transaccion", "Tipo Cuenta", "N° Cuenta", "Titular", "Monto", "Depositante", "Empleado"
                        }
                ));
                this.totalDeposito.setText("$" + totalD22);
                this.totalRetiro.setText("$" + totalR22);
                this.valorTotal.setText("$" + total22);
                break;
            case 23:
                int total23 = 0;
                int totalD23 = 0;
                int totalR23 = 0;
                int indiceMatriz23 = 0;
                matris23 = new String[listaRegistro.size()][7];
                for (int i = 0; i < listaRegistro.size(); i++) {
                    if (listaRegistro.get(i).getCuenta().equals(texto) & this.empleadoSeleccion1.getSelectedItem().toString().equals(listaRegistro.get(i).getEmpleado())) {
                        matris23[indiceMatriz23][0] = listaRegistro.get(i).getTipo();
                        matris23[indiceMatriz23][1] = listaRegistro.get(i).getTipoCuenta();
                        matris23[indiceMatriz23][2] = listaRegistro.get(i).getCuenta();
                        matris23[indiceMatriz23][3] = listaRegistro.get(i).getTitular();
                        matris23[indiceMatriz23][4] = "$" + listaRegistro.get(i).getSaldo() + "";
                        matris23[indiceMatriz23][5] = listaRegistro.get(i).getDepositante();
                        matris23[indiceMatriz23][6] = listaRegistro.get(i).getEmpleado();
                        indiceMatriz23++;
                        if (listaRegistro.get(i).getTipo().equals("Depósito")) {
                            totalD23 = totalD23 + listaRegistro.get(i).getSaldo();
                        }
                        if (listaRegistro.get(i).getTipo().equals("Retiro")) {
                            totalR23 = totalR23 + listaRegistro.get(i).getSaldo();
                        }
                        total23 = total23 + listaRegistro.get(i).getSaldo();
                    }
                }
                Tabla.setModel(new javax.swing.table.DefaultTableModel(
                        matris23,
                        new String[]{
                            "Tipo Transaccion", "Tipo Cuenta", "N° Cuenta", "Titular", "Monto", "Depositante", "Empleado"
                        }
                ));
                this.totalDeposito.setText("$" + totalD23);
                this.totalRetiro.setText("$" + totalR23);
                this.valorTotal.setText("$" + total23);
                break;
            case 24:
                int total24 = 0;
                int totalD24 = 0;
                int totalR24 = 0;
                int indiceMatriz24 = 0;
                matris24 = new String[listaRegistro.size()][7];
                for (int i = 0; i < listaRegistro.size(); i++) {
                    if (listaRegistro.get(i).getCuenta().equals(texto) & this.empleadoSeleccion1.getSelectedItem().toString().equals(listaRegistro.get(i).getEmpleado()) & listaRegistro.get(i).getTipo().equals("Depósito")) {
                        matris24[indiceMatriz24][0] = listaRegistro.get(i).getTipo();
                        matris24[indiceMatriz24][1] = listaRegistro.get(i).getTipoCuenta();
                        matris24[indiceMatriz24][2] = listaRegistro.get(i).getCuenta();
                        matris24[indiceMatriz24][3] = listaRegistro.get(i).getTitular();
                        matris24[indiceMatriz24][4] = "$" + listaRegistro.get(i).getSaldo() + "";
                        matris24[indiceMatriz24][5] = listaRegistro.get(i).getDepositante();
                        matris24[indiceMatriz24][6] = listaRegistro.get(i).getEmpleado();
                        indiceMatriz24++;
                        if (listaRegistro.get(i).getTipo().equals("Depósito")) {
                            totalD24 = totalD24 + listaRegistro.get(i).getSaldo();
                        }
                        if (listaRegistro.get(i).getTipo().equals("Retiro")) {
                            totalR24 = totalR24 + listaRegistro.get(i).getSaldo();
                        }
                        total24 = total24 + listaRegistro.get(i).getSaldo();
                    }
                }
                Tabla.setModel(new javax.swing.table.DefaultTableModel(
                        matris24,
                        new String[]{
                            "Tipo Transaccion", "Tipo Cuenta", "N° Cuenta", "Titular", "Monto", "Depositante", "Empleado"
                        }
                ));
                this.totalDeposito.setText("$" + totalD24);
                this.totalRetiro.setText("$" + totalR24);
                this.valorTotal.setText("$" + total24);
                break;
            case 25:
                int total25 = 0;
                int totalD25 = 0;
                int totalR25 = 0;
                int indiceMatriz25 = 0;
                matris25 = new String[listaRegistro.size()][7];
                for (int i = 0; i < listaRegistro.size(); i++) {
                    if (listaRegistro.get(i).getCuenta().equals(texto) & this.empleadoSeleccion1.getSelectedItem().toString().equals(listaRegistro.get(i).getEmpleado()) & listaRegistro.get(i).getTipo().equals("Retiro")) {
                        matris25[indiceMatriz25][0] = listaRegistro.get(i).getTipo();
                        matris25[indiceMatriz25][1] = listaRegistro.get(i).getTipoCuenta();
                        matris25[indiceMatriz25][2] = listaRegistro.get(i).getCuenta();
                        matris25[indiceMatriz25][3] = listaRegistro.get(i).getTitular();
                        matris25[indiceMatriz25][4] = "$" + listaRegistro.get(i).getSaldo() + "";
                        matris25[indiceMatriz25][5] = listaRegistro.get(i).getDepositante();
                        matris25[indiceMatriz25][6] = listaRegistro.get(i).getEmpleado();
                        indiceMatriz25++;
                        if (listaRegistro.get(i).getTipo().equals("Depósito")) {
                            totalD25 = totalD25 + listaRegistro.get(i).getSaldo();
                        }
                        if (listaRegistro.get(i).getTipo().equals("Retiro")) {
                            totalR25 = totalR25 + listaRegistro.get(i).getSaldo();
                        }
                        total25 = total25 + listaRegistro.get(i).getSaldo();
                    }
                }
                Tabla.setModel(new javax.swing.table.DefaultTableModel(
                        matris25,
                        new String[]{
                            "Tipo Transaccion", "Tipo Cuenta", "N° Cuenta", "Titular", "Monto", "Depositante", "Empleado"
                        }
                ));
                this.totalDeposito.setText("$" + totalD25);
                this.totalRetiro.setText("$" + totalR25);
                this.valorTotal.setText("$" + total25);
                break;
            default:
                break;
        }
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;

                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(index.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(index.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(index.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(index.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new index().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Regsitrar_Empleado;
    private javax.swing.JTable Tabla;
    private javax.swing.JTextField apellido;
    private javax.swing.JButton cancelar;
    private javax.swing.JButton cancelarEmpleado;
    private javax.swing.JTextField depositante;
    private javax.swing.JTextField eApellido;
    private com.toedter.calendar.JDateChooser eFecha;
    private javax.swing.JTextField eNombre;
    public javax.swing.JComboBox<String> empleadoSeleccion;
    public javax.swing.JComboBox<String> empleadoSeleccion1;
    private com.toedter.calendar.JDateChooser fecha;
    private javax.swing.JButton guardar;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel10;
    private javax.swing.JPanel jPanel11;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JPanel jPanel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JButton limpiarFiltros;
    private javax.swing.JTextField nombre;
    private javax.swing.JTextField numeroCuenta;
    private javax.swing.JTextField numeroCuentaB;
    private javax.swing.JSpinner saldo;
    private javax.swing.JComboBox<String> tipoCuenta;
    private javax.swing.JComboBox<String> tipoCuentaB;
    private javax.swing.JComboBox<String> tipoTransaccion;
    private javax.swing.JComboBox<String> tipoTransaccionB;
    private javax.swing.JTextPane totalDeposito;
    private javax.swing.JTextPane totalRetiro;
    private javax.swing.JButton transaccion;
    private javax.swing.JTextPane valorTotal;
    // End of variables declaration//GEN-END:variables
}
